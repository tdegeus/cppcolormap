language: cpp

dist: trusty

env:

matrix:
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=gcc GCC=6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=gcc GCC=7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env: COMPILER=gcc GCC=8
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env: COMPILER=clang CLANG=6.0
    - os: osx
      osx_image: xcode8
      compiler: clang

env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"

before_install:
  - |
    # Configure build variables
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      if [[ "$COMPILER" == "gcc" ]]; then
        export CXX=g++-$GCC CC=gcc-$GCC;
      fi
      if [[ "$COMPILER" == "clang" ]]; then
        export CXX=clang++-$CLANG CC=clang-$CLANG;
      fi
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export CXX=clang++ CC=clang;
    fi

install:
  # Set environment using Conda
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      MINCONDA_OS=$MINCONDA_LINUX;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      MINCONDA_OS=$MINCONDA_OSX;
    fi
  - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install -c conda-forge python
  - conda install -c conda-forge numpy
  - conda install -c conda-forge matplotlib
  - conda install -c conda-forge cmake
  - conda install -c conda-forge xtensor
  - conda install -c conda-forge pyxtensor
  # Build/install the library
  - cmake .
  - sudo make install
  - python -m pip install .

script:
  # Run Python example
  - python examples/python/match.py
  # Compile and run C++ example
  - cd examples/cpp
  - cmake .
  - make
  - ./example

